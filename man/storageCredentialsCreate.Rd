% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/storage_credentials.R
\name{storageCredentialsCreate}
\alias{storageCredentialsCreate}
\title{Create a storage credential.}
\usage{
storageCredentialsCreate(
  client,
  name,
  aws_iam_role = NULL,
  azure_managed_identity = NULL,
  azure_service_principal = NULL,
  comment = NULL,
  databricks_gcp_service_account = NULL,
  read_only = NULL,
  skip_validation = NULL
)
}
\arguments{
\item{client}{Required. Instance of DatabricksClient()}

\item{name}{Required. The credential name.}

\item{aws_iam_role}{The AWS IAM role configuration.}

\item{azure_managed_identity}{The Azure managed identity configuration.}

\item{azure_service_principal}{The Azure service principal configuration.}

\item{comment}{Comment associated with the credential.}

\item{databricks_gcp_service_account}{The \if{html}{\out{<Databricks>}} managed GCP service account configuration.}

\item{read_only}{Whether the storage credential is only usable for read operations.}

\item{skip_validation}{Supplying true to this argument skips validation of the created credential.}
}
\description{
Creates a new storage credential. The request object is specific to the
cloud:
}
\details{
\itemize{
\item \strong{AwsIamRole} for AWS credentials. * \strong{AzureServicePrincipal} for Azure
credentials. * \strong{AzureManagedIdentity} for Azure managed credentials. *
\strong{DatabricksGcpServiceAccount} for GCP managed credentials.
}

The caller must be a metastore admin and have the
\strong{CREATE_STORAGE_CREDENTIAL} privilege on the metastore.
}
