% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/secrets.R
\name{put_secret}
\alias{put_secret}
\title{Add a secret.}
\usage{
put_secret(client, scope, key, bytes_value = NULL, string_value = NULL)
}
\arguments{
\item{client}{Required. Instance of DatabricksClient()}

\item{scope}{Required. The name of the scope to which the secret will be associated with.}

\item{key}{Required. A unique name to identify the secret.}

\item{bytes_value}{If specified, value will be stored as bytes.}

\item{string_value}{If specified, note that the value will be stored in UTF-8 (MB4) form.}
}
\description{
Inserts a secret under the provided scope with the given name. If a secret
already exists with the same name, this command overwrites the existing
secret's value. The server encrypts the secret using the secret scope's
encryption settings before storing it.
}
\details{
You must have \code{WRITE} or \code{MANAGE} permission on the secret scope. The secret
key must consist of alphanumeric characters, dashes, underscores, and
periods, and cannot exceed 128 characters. The maximum allowed secret value
size is 128 KB. The maximum number of secrets in a given scope is 1000.

The input fields 'string_value' or 'bytes_value' specify the type of the
secret, which will determine the value returned when the secret value is
requested. Exactly one must be specified.

Throws \code{RESOURCE_DOES_NOT_EXIST} if no such secret scope exists. Throws
\code{RESOURCE_LIMIT_EXCEEDED} if maximum number of secrets in scope is exceeded.
Throws \code{INVALID_PARAMETER_VALUE} if the key name or value length is invalid.
Throws \code{PERMISSION_DENIED} if the user does not have permission to make this
API call.
}
