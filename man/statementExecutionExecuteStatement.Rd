% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statement_execution.R
\name{statementExecutionExecuteStatement}
\alias{statementExecutionExecuteStatement}
\title{Execute a SQL statement.}
\usage{
statementExecutionExecuteStatement(
  client,
  byte_limit = NULL,
  catalog = NULL,
  disposition = NULL,
  format = NULL,
  on_wait_timeout = NULL,
  schema = NULL,
  statement = NULL,
  wait_timeout = NULL,
  warehouse_id = NULL
)
}
\arguments{
\item{client}{Required. Instance of DatabricksClient()}

\item{byte_limit}{Applies the given byte limit to the statement's result size.}

\item{catalog}{Sets default catalog for statement execution, similar to \href{https://docs.databricks.com/sql/language-manual/sql-ref-syntax-ddl-use-catalog.html}{\verb{USE CATALOG}} in SQL.}

\item{disposition}{The fetch disposition provides two modes of fetching results: \code{INLINE} and \code{EXTERNAL_LINKS}.}

\item{format}{Statement execution supports three result formats: \code{JSON_ARRAY} (default), \code{ARROW_STREAM}, and \code{CSV}.}

\item{on_wait_timeout}{When in synchronous mode with \verb{wait_timeout > 0s} it determines the action taken when the timeout is reached: \code{CONTINUE} â†’ the statement execution continues asynchronously and the call returns a statement ID immediately.}

\item{schema}{Sets default schema for statement execution, similar to \href{https://docs.databricks.com/sql/language-manual/sql-ref-syntax-ddl-use-schema.html}{\verb{USE SCHEMA}} in SQL.}

\item{statement}{SQL statement to execute.}

\item{wait_timeout}{The time in seconds the API service will wait for the statement's result set as \code{Ns}, where \code{N} can be set to 0 or to a value between 5 and 50.}

\item{warehouse_id}{Warehouse upon which to execute a statement.}
}
\description{
Execute a SQL statement, and if flagged as such, await its result for a
specified time.
}
