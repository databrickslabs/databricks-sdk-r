% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbfs.R
\name{dbfsDelete}
\alias{dbfsDelete}
\title{Delete a file/directory.}
\usage{
dbfsDelete(client, path, recursive = NULL)
}
\arguments{
\item{client}{Required. Instance of DatabricksClient()}

\item{path}{Required. The path of the file or directory to delete.}

\item{recursive}{Whether or not to recursively delete the directory's contents.}
}
\description{
Delete the file or directory (optionally recursively delete all files in the
directory). This call throws an exception with \code{IO_ERROR} if the path is a
non-empty directory and \code{recursive} is set to \code{false} or on other similar
errors.
}
\details{
When you delete a large number of files, the delete operation is done in
increments. The call returns a response after approximately 45 seconds with
an error message (503 Service Unavailable) asking you to re-invoke the delete
operation until the directory structure is fully deleted.

For operations that delete more than 10K files, we discourage using the DBFS
REST API, but advise you to perform such operations in the context of a
cluster, using the \href{/dev-tools/databricks-utils.html#dbutils-fs}{File system utility (dbutils.fs)}. \code{dbutils.fs}
covers the functional scope of the DBFS REST API, but from notebooks. Running
such operations using notebooks provides better control and manageability,
such as selective deletes, and the possibility to automate periodic delete
jobs.
}
