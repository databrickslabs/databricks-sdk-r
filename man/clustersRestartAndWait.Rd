% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusters.R
\name{clustersRestartAndWait}
\alias{clustersRestartAndWait}
\title{Restart cluster.}
\usage{
clustersRestartAndWait(
  client,
  cluster_id,
  restart_user = NULL,
  timeout = 20,
  callback = cli_reporter
)
}
\arguments{
\item{client}{Required. Instance of DatabricksClient()}

\item{cluster_id}{Required. The cluster to be started.}

\item{restart_user}{\if{html}{\out{<needs content added>}}.}

\item{timeout}{Time to wait for the operation to complete in minutes.}

\item{callback}{Function to report the status of the operation. By default, it reports to console.}
}
\description{
This is a long-running operation, which blocks until Clusters on Databricks reach
RUNNING state with the timeout of 20 minutes, that you can change via \code{timeout} parameter.
By default, the state of Databricks Clusters is reported to console. You can change this behavior
by changing the \code{callback} parameter.
}
\details{
Restarts a Spark cluster with the supplied ID. If the cluster is not
currently in a \code{RUNNING} state, nothing will happen.
}
