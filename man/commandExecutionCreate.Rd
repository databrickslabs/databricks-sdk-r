% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/command_execution.R
\name{commandExecutionCreate}
\alias{commandExecutionCreate}
\title{Create an execution context.}
\usage{
commandExecutionCreate(
  client,
  cluster_id = NULL,
  language = NULL,
  timeout = 20,
  callback = cli_reporter
)
}
\arguments{
\item{client}{Required. Instance of DatabricksClient()}

\item{cluster_id}{Running cluster id.}

\item{language}{}

\item{timeout}{Time to wait for the operation to complete in minutes.}

\item{callback}{Function to report the status of the operation. By default, it reports to console.}
}
\description{
This is a long-running operation, which blocks until Command Execution on Databricks reach
Running state with the timeout of 20 minutes, that you can change via \code{timeout} parameter.
By default, the state of Databricks Command Execution is reported to console. You can change this behavior
by changing the \code{callback} parameter.
}
\details{
Creates an execution context for running cluster commands.

If successful, this method returns the ID of the new execution context.
}
